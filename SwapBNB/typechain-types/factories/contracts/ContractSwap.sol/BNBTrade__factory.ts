/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BNBTrade,
  BNBTradeInterface,
} from "../../../contracts/ContractSwap.sol/BNBTrade";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bnbTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdtTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bnbAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "bnbTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnbAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260c860035534801561001557600080fd5b5060405161074538038061074583398181016040528101906100379190610163565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101a3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061013082610105565b9050919050565b61014081610125565b811461014b57600080fd5b50565b60008151905061015d81610137565b92915050565b6000806040838503121561017a57610179610100565b5b60006101888582860161014e565b92505060206101998582860161014e565b9150509250929050565b610593806101b26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633ba0b9a91461005c5780638da5cb5b1461007a57806394b918de146100985780639d741e5d146100b4578063b3b640df146100d2575b600080fd5b6100646100f0565b6040516100719190610329565b60405180910390f35b6100826100f6565b60405161008f9190610385565b60405180910390f35b6100b260048036038101906100ad91906103d1565b61011a565b005b6100bc6102c4565b6040516100c99190610385565b60405180910390f35b6100da6102ea565b6040516100e79190610385565b60405180910390f35b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003548261012a919061042d565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161018b9392919061046f565b6020604051808303816000875af11580156101aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ce91906104de565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161022c92919061050b565b6020604051808303816000875af115801561024b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026f91906104de565b503373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a75883836040516102b8929190610534565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61032381610310565b82525050565b600060208201905061033e600083018461031a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061036f82610344565b9050919050565b61037f81610364565b82525050565b600060208201905061039a6000830184610376565b92915050565b600080fd5b6103ae81610310565b81146103b957600080fd5b50565b6000813590506103cb816103a5565b92915050565b6000602082840312156103e7576103e66103a0565b5b60006103f5848285016103bc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061043882610310565b915061044383610310565b925082820261045181610310565b91508282048414831517610468576104676103fe565b5b5092915050565b60006060820190506104846000830186610376565b6104916020830185610376565b61049e604083018461031a565b949350505050565b60008115159050919050565b6104bb816104a6565b81146104c657600080fd5b50565b6000815190506104d8816104b2565b92915050565b6000602082840312156104f4576104f36103a0565b5b6000610502848285016104c9565b91505092915050565b60006040820190506105206000830185610376565b61052d602083018461031a565b9392505050565b6000604082019050610549600083018561031a565b610556602083018461031a565b939250505056fea2646970667358221220212fc4d5885591f5010aa198b854fa09e1d2fdedc24aa722fe7b09cadf273e7764736f6c63430008140033";

type BNBTradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNBTradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BNBTrade__factory extends ContractFactory {
  constructor(...args: BNBTradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _bnbTokenAddress: AddressLike,
    _usdtTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _bnbTokenAddress,
      _usdtTokenAddress,
      overrides || {}
    );
  }
  override deploy(
    _bnbTokenAddress: AddressLike,
    _usdtTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _bnbTokenAddress,
      _usdtTokenAddress,
      overrides || {}
    ) as Promise<
      BNBTrade & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BNBTrade__factory {
    return super.connect(runner) as BNBTrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNBTradeInterface {
    return new Interface(_abi) as BNBTradeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BNBTrade {
    return new Contract(address, _abi, runner) as unknown as BNBTrade;
  }
}
